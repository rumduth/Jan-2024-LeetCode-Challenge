1026. Maximum Difference Between Node and Ancestor
Given the root of a binary tree, find the maximum value v for which there exist different nodes a and b where v = |a.val - b.val| and a is an ancestor of b.

A node a is an ancestor of b if either: any child of a is equal to b or any child of a is an ancestor of b.

//C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, int min_val, int max_val, int& ans)
    {
        if(root == NULL)
            return;
        int a = abs(root->val-min_val);
        int b = abs(root->val-max_val);
        ans = max(ans,max(a,b));
        min_val = min(min_val,root->val);
        max_val = max(max_val,root->val);
        helper(root->left,min_val,max_val,ans);
        helper(root->right,min_val,max_val,ans);

    }
    int maxAncestorDiff(TreeNode* root) {
        int ans = 0;
        helper(root,root->val,root->val,ans);
        return ans;
    }
};

Time Complexity: O(N)
Space Complexity: O(1)


//Python3
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxAncestorDiff(self, root: Optional[TreeNode]) -> int:
        def dfs(node, min_val, max_val):
            if node is None:
                return
            nonlocal ans
            a = abs(node.val - min_val)
            b = abs(node.val - max_val)
            ans = max(ans,max(a,b))
            min_val = min(min_val,node.val)
            max_val = max(max_val,node.val)
            dfs(node.left,min_val,max_val)
            dfs(node.right,min_val,max_val)
        ans = 0
        dfs(root,root.val,root.val)
        return ans
        