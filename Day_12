1704. Determine if String Halves Are Alike
You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.


//In C++
class Solution {
public:
    bool check(char a)
    {
        if(tolower(a) == 'a' || tolower(a) == 'e' || tolower(a) == 'i' || tolower(a) == 'o' || tolower(a) == 'u')
            return true;
        return false;
    }
    bool halvesAreAlike(string s) {
        int i = 0;
        int j = s.size()/2;
        int count1 = 0;
        int count2 = 0;
        while(j < s.size())
        {
            if(check(s[i]))
                count1++;
            if(check(s[j]))
                count2++;
            i++;
            j++;
        }
        return count1 == count2;
    }
};
Time Complexity: O(N)
Space Complexity: O(1)

//Python3
class Solution:
    def halvesAreAlike(self, s: str) -> bool:
        i = 0
        j = len(s) - 1
        cnt1 = 0
        cnt2 = 0
        while i < j:
            if s[i].lower() in ['a','e','i','o','u']:
                cnt1 += 1
            if s[j].lower() in ['a','e','i','o','u']:
                cnt2 += 1
            i += 1
            j -= 1
        return cnt1 == cnt2
             

        